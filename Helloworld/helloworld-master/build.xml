<project name="My Project" default="help" basedir="." xmlns:sonar="antlib:org.sonar.ant">
  <!-- Ant Demo Project -->
  <!-- Define the properties used by the Ant build -->
  <property name="app.name"     value="helloWorld"/>
  <property name="app.version"  value="1.0"/>
  <property name="lib" 		value="${basedir}/lib"/>
  <property name="work.home"    value="${basedir}/work"/>
  <property name="dist.home"    value="${basedir}/dist"/>
  <property name="src.home"     value="${basedir}/src"/>
  <property name="web.home"     value="${basedir}/web"/>
  
  <!-- Define the SonarQube global properties (the most usual way is to pass these properties via the command line) 
<property name="sonar.host.url" value="http://localhost:9000" />  -->
  
  <!-- Define the SonarQube project properties 
<property name="sonar.projectKey" value="org.sonarqube:sonarqube-scanner-ant" />
<property name="sonar.projectName" value="${app.name}" />
<property name="sonar.projectVersion" value="${app.version}" />
<property name="sonar.sources" value="${src.home}" />
<property name="sonar.java.binaries" value="${work.home}" />
<property name="sonar.sourceEncoding" value="UTF-8" />
-->
  
  <target name="help">
    <echo>You can use the following targets:</echo>
    <echo> </echo>
    <echo>  help    : (default) Prints this message </echo>
    <echo>  all     : Cleans, compiles, and packages application</echo>
    <echo>  clean   : Deletes work directories</echo>
    <echo>  compile : Compiles servlets into class files</echo>
    <echo>  dist    : Packages artifacts into a deployable WAR</echo>
    <echo></echo>
    <echo>For example, to clean, compile, and package all at once, run:</echo>
    <echo>prompt> ant all </echo>
  </target>

  <!-- Define the CLASSPATH for project-->
  <path id="compile.classpath">
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
    <pathelement location="${lib}"/>
    <fileset dir="${lib}">
      <include name="*.jar"/>
    </fileset>
  </path>

  <target name="all" depends="clean,compile,dist"
          description="Clean work dirs, then compile and create a WAR, and run sonarqube analysis"/>

  <target name="clean"
          description="Delete old work and dist directories">
    <delete dir="${work.home}"/>
    <delete dir="${dist.home}"/>
  </target>

  <target name="prepare" depends="clean"
          description="Create working dirs and copy static files to work dir">
    <mkdir  dir="${dist.home}"/>
    <mkdir  dir="${work.home}/WEB-INF/classes"/>
    <!-- Copy static HTML and JSP files to work dir -->
    <copy todir="${work.home}">
      <fileset dir="${web.home}"/>
    </copy>
  </target>

  <target name="compile" depends="prepare"
          description="Compile Java sources and copy to WEB-INF/classes dir">
    <javac srcdir="${src.home}"
          destdir="${work.home}/WEB-INF/classes">
        <classpath refid="compile.classpath"/>
    </javac>
    <copy  todir="${work.home}/WEB-INF/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>

  </target>
 <!--
    Define SonarQube Scanner for Ant Target 
 <target name="sonar" depends="compile">
    <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
         Update the following line, or put the "sonarqube-ant-task-*.jar" file in your "$HOME/.ant/lib" folder 
        <classpath path="path/to/sonar/ant/task/lib/sonarqube-ant-task-*.jar" />
    </taskdef> -->
 
    <!-- Execute SonarQube Scanner for Ant Analysis -->
 <!-- <sonar:sonar />
</target> -->
  

  <target name="dist" depends="compile"
          description="Create WAR file for binary distribution">
    <jar jarfile="${dist.home}/${app.name}-${app.version}.war"
         basedir="${work.home}"/>
  </target> 
  
</project> 
